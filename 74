/*
# [Operation Name]
Recreate user_settings Table

## Query Description: [This script corrects a schema mismatch by dropping the existing `user_settings` table and recreating it with the correct column structure and security policies. Any previously saved user settings will be lost, but this is necessary to align the database with the application code. Default settings will be regenerated for users upon their next login.]

## Metadata:
- Schema-Category: ["Structural", "Dangerous"]
- Impact-Level: ["Medium"]
- Requires-Backup: [false]
- Reversible: [false]

## Structure Details:
- Drops table: `public.user_settings`
- Creates table: `public.user_settings` with the correct columns.
- Creates RLS policies for select and update.
- Adds an auto-update trigger for the `updated_at` column.

## Security Implications:
- RLS Status: [Enabled]
- Policy Changes: [Yes]
- Auth Requirements: [Policies are based on `auth.uid()`]

## Performance Impact:
- Indexes: [Primary key index will be recreated]
- Triggers: [Adds a new `updated_at` trigger]
- Estimated Impact: [Low, as the table is expected to have few rows per user.]
*/

-- Drop the existing table to ensure a clean slate
DROP TABLE IF EXISTS public.user_settings;

-- Recreate the table with the correct column names and structure
CREATE TABLE public.user_settings (
    id UUID PRIMARY KEY REFERENCES auth.users(id) ON DELETE CASCADE,
    alert_pause_warning_dashboard BOOLEAN NOT NULL DEFAULT true,
    alert_pause_warning_email BOOLEAN NOT NULL DEFAULT false,
    alert_pause_warning_push BOOLEAN NOT NULL DEFAULT false,
    alert_pause_start_dashboard BOOLEAN NOT NULL DEFAULT true,
    alert_pause_start_email BOOLEAN NOT NULL DEFAULT false,
    alert_pause_start_push BOOLEAN NOT NULL DEFAULT false,
    alert_market_reopen_dashboard BOOLEAN NOT NULL DEFAULT true,
    alert_market_reopen_email BOOLEAN NOT NULL DEFAULT false,
    alert_market_reopen_push BOOLEAN NOT NULL DEFAULT false,
    alert_weekly_close_warning_dashboard BOOLEAN NOT NULL DEFAULT true,
    alert_weekly_close_warning_email BOOLEAN NOT NULL DEFAULT false,
    alert_weekly_close_warning_push BOOLEAN NOT NULL DEFAULT false,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);

-- Add comments for clarity
COMMENT ON TABLE public.user_settings IS 'Stores user-specific notification preferences.';
COMMENT ON COLUMN public.user_settings.id IS 'Links to the user in auth.users.';

-- Enable Row Level Security
ALTER TABLE public.user_settings ENABLE ROW LEVEL SECURITY;

-- Create policies to ensure users can only access their own settings
CREATE POLICY "Allow individual read access" ON public.user_settings FOR SELECT
    USING (auth.uid() = id);

CREATE POLICY "Allow individual update access" ON public.user_settings FOR UPDATE
    USING (auth.uid() = id)
    WITH CHECK (auth.uid() = id);

-- Function to handle automatic `updated_at` timestamp
CREATE OR REPLACE FUNCTION public.handle_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = timezone('utc', now());
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- Trigger to update the `updated_at` column on any change
CREATE TRIGGER on_user_settings_updated
BEFORE UPDATE ON public.user_settings
FOR EACH ROW
EXECUTE FUNCTION public.handle_updated_at();

-- Add the table to the Supabase publication for real-time updates
ALTER PUBLICATION supabase_realtime ADD TABLE public.user_settings;
