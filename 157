import { useState, useEffect, useRef } from 'react';
import { getMarketStatus, MarketStatus } from '../lib/trading-hours';
import { useToast } from '../contexts/ToastContext';
import { useSettings } from '../contexts/SettingsContext';
import { CheckCircle, Clock, Pause } from 'lucide-react';

interface TradingStatus {
  status: MarketStatus;
  message: string;
  color: string;
  icon: React.ElementType;
}

const statusConfig = {
  OPEN: { color: 'bg-green-500/10 border-green-500/30 text-green-400', icon: CheckCircle },
  PAUSED: { color: 'bg-yellow-500/10 border-yellow-500/30 text-yellow-400', icon: Pause },
  CLOSED: { color: 'bg-red-500/10 border-red-500/30 text-red-400', icon: Clock },
};

export const useTradingStatus = () => {
  const [statusInfo, setStatusInfo] = useState<TradingStatus | null>(null);
  const prevStatusRef = useRef<MarketStatus | null>(null);
  const toast = useToast();
  const { settings, loading: settingsLoading } = useSettings();
  const notificationsSent = useRef({
    pauseWarning: false,
    closeWarning: false,
  });

  useEffect(() => {
    const updateStatus = () => {
      if (settingsLoading) return; // Don't run if settings are not loaded yet

      const now = new Date();
      const { status, message, nextEventTime, nextEventStatus } = getMarketStatus(now);
      const prevStatus = prevStatusRef.current;

      // Update banner state
      const config = statusConfig[status];
      setStatusInfo({
        status,
        message,
        color: config.color,
        icon: config.icon,
      });

      // --- Notification Logic ---

      // Reset warnings on market state changes
      if (prevStatus === 'PAUSED' && status === 'OPEN') {
        notificationsSent.current.pauseWarning = false;
        if (settings?.alert_market_reopen_dashboard) {
          toast.success('Mercado Reaberto', 'A negociação de XAU/USD está disponível novamente.');
        }
      }
      if (prevStatus === 'CLOSED' && status === 'OPEN') {
        notificationsSent.current = { pauseWarning: false, closeWarning: false };
        if (settings?.alert_market_reopen_dashboard) {
            toast.success('Mercado Aberto', 'A semana de negociação para XAU/USD começou.');
        }
      }

      const timeToNextEvent = (nextEventTime.getTime() - now.getTime()) / (1000 * 60); // in minutes

      // Daily pause warning
      if (
        status === 'OPEN' &&
        nextEventStatus === 'PAUSED' &&
        timeToNextEvent > 0 &&
        timeToNextEvent <= 10 &&
        !notificationsSent.current.pauseWarning &&
        settings?.alert_pause_warning_dashboard
      ) {
        toast.warning('Pausa Diária Iminente', `O mercado XAU/USD entrará em pausa às ${nextEventTime.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' })}.`);
        notificationsSent.current.pauseWarning = true;
      }

      // Weekly close warning
      if (
        status === 'OPEN' &&
        nextEventStatus === 'CLOSED' &&
        timeToNextEvent > 0 &&
        timeToNextEvent <= 30 &&
        !notificationsSent.current.closeWarning &&
        settings?.alert_weekly_close_warning_dashboard
      ) {
        toast.warning('Fechamento Semanal Iminente', `O mercado XAU/USD encerrará às ${nextEventTime.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' })}.`);
        notificationsSent.current.closeWarning = true;
      }
      
      // Pause start notification
      if (prevStatus === 'OPEN' && status === 'PAUSED' && settings?.alert_pause_start_dashboard) {
          toast.info('Mercado em Pausa', `A negociação será retomada às ${nextEventTime.toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' })}.`);
      }

      prevStatusRef.current = status;
    };

    updateStatus();
    const intervalId = setInterval(updateStatus, 15 * 1000);

    return () => clearInterval(intervalId);
  }, [toast, settings, settingsLoading]);

  return statusInfo;
};
