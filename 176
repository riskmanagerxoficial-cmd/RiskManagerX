import React, { lazy, Suspense } from 'react'
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom'
import { AuthProvider, useAuth } from './contexts/AuthContext'
import { ToastProvider } from './contexts/ToastContext'
import { PriceProvider } from './contexts/PriceContext'
import { PageLoader } from './components/ui/PageLoader'

// --- Lazy Loaded Pages ---
const LandingPage = lazy(() => import('./components/landing/LandingPage').then(module => ({ default: module.LandingPage })));
const AuthForm = lazy(() => import('./components/auth/AuthForm').then(module => ({ default: module.AuthForm })));
const Header = lazy(() => import('./components/layout/Header').then(module => ({ default: module.Header })));
const Dashboard = lazy(() => import('./components/dashboard/Dashboard').then(module => ({ default: module.Dashboard })));
const AppFooter = lazy(() => import('./components/layout/AppFooter').then(module => ({ default: module.AppFooter })));

const AboutPage = lazy(() => import('./components/pages/AboutPage').then(module => ({ default: module.AboutPage })));
const ContactPage = lazy(() => import('./components/pages/ContactPage').then(module => ({ default: module.ContactPage })));
const PrivacyPolicyPage = lazy(() => import('./components/pages/PrivacyPolicyPage').then(module => ({ default: module.PrivacyPolicyPage })));
const TermsOfServicePage = lazy(() => import('./components/pages/TermsOfServicePage').then(module => ({ default: module.TermsOfServicePage })));
const BlogPage = lazy(() => import('./components/pages/BlogPage').then(module => ({ default: module.BlogPage })));
const CareersPage = lazy(() => import('./components/pages/CareersPage').then(module => ({ default: module.CareersPage })));
const HelpCenterPage = lazy(() => import('./components/pages/HelpCenterPage').then(module => ({ default: module.HelpCenterPage })));
const DocumentationPage = lazy(() => import('./components/pages/DocumentationPage').then(module => ({ default: module.DocumentationPage })));
const SystemStatusPage = lazy(() => import('./components/pages/SystemStatusPage').then(module => ({ default: module.SystemStatusPage })));
const CommunityPage = lazy(() => import('./components/pages/CommunityPage').then(module => ({ default: module.CommunityPage })));
const CookiesPage = lazy(() => import('./components/pages/CookiesPage').then(module => ({ default: module.CookiesPage })));
const LGPDPage = lazy(() => import('./components/pages/LGPDPage').then(module => ({ default: module.LGPDPage })));
const APIPage = lazy(() => import('./components/pages/APIPage').then(module => ({ default: module.APIPage })));
const DisclaimerPage = lazy(() => import('./components/pages/DisclaimerPage').then(module => ({ default: module.DisclaimerPage })));
const GrowthSimulatorPage = lazy(() => import('./components/pages/GrowthSimulatorPage').then(module => ({ default: module.GrowthSimulatorPage })));
const TradingJournalPage = lazy(() => import('./components/pages/TradingJournalPage').then(module => ({ default: module.TradingJournalPage })));


const AppContent: React.FC = () => {
  const { user, loading } = useAuth()

  if (loading) {
    // Loader para a verificação inicial de autenticação
    return <PageLoader />;
  }

  const DashboardLayout = (
    <div className="min-h-screen bg-dark-bg flex flex-col">
      <Header />
      <main className="flex-grow">
        <Dashboard />
      </main>
      <AppFooter />
    </div>
  );

  return (
    <Suspense fallback={<PageLoader />}>
      <Routes>
        <Route path="/" element={!user ? <LandingPage /> : <Navigate to="/dashboard" replace />} />
        
        <Route path="/auth" element={user ? <Navigate to="/dashboard" replace /> : <AuthForm />} />
        
        <Route path="/dashboard" element={user ? DashboardLayout : <Navigate to="/auth" replace />} />

        <Route path="/growth-simulator" element={user ? <GrowthSimulatorPage /> : <Navigate to="/auth" replace />} />
        
        <Route path="/journal" element={user ? <TradingJournalPage /> : <Navigate to="/auth" replace />} />

        {/* Rotas das páginas do rodapé */}
        <Route path="/about" element={<AboutPage />} />
        <Route path="/contact" element={<ContactPage />} />
        <Route path="/privacy-policy" element={<PrivacyPolicyPage />} />
        <Route path="/terms-of-service" element={<TermsOfServicePage />} />
        <Route path="/blog" element={<BlogPage />} />
        <Route path="/careers" element={<CareersPage />} />
        <Route path="/help" element={<HelpCenterPage />} />
        <Route path="/docs" element={<DocumentationPage />} />
        <Route path="/status" element={<SystemStatusPage />} />
        <Route path="/community" element={<CommunityPage />} />
        <Route path="/cookies" element={<CookiesPage />} />
        <Route path="/lgpd" element={<LGPDPage />} />
        <Route path="/api-docs" element={<APIPage />} />
        <Route path="/disclaimer" element={<DisclaimerPage />} />
      </Routes>
    </Suspense>
  )
}

function App() {
  return (
    <Router>
      <ToastProvider>
        <AuthProvider>
          <PriceProvider>
            <AppContent />
          </PriceProvider>
        </AuthProvider>
      </ToastProvider>
    </Router>
  )
}

export default App
